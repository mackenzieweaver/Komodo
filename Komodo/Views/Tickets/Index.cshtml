@model IEnumerable<Komodo.Models.Ticket>
@inject Microsoft.AspNetCore.Identity.UserManager<BTUser> _userManager
@inject Komodo.Services.IBTProjectService _projectService

@{
    ViewData["Title"] = "Index";
    var userId = _userManager.GetUserId(User);
}

<h1>All Tickets</h1>

@if (!User.IsInRole("NewUser"))
{
    <p>
        <a class="btn btn-outline-dark" asp-action="Create">New Ticket</a>
    </p>
}

<table class="table table-striped ticketsIndex">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Created)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Updated)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Project)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TicketType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TicketPriority)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TicketStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OwnerUser)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DeveloperUser)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Created)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Updated)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Project.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TicketType.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TicketPriority.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TicketStatus.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OwnerUser.FullName)
            </td>
            <td>
                @if(item.DeveloperUserId == null)
                {
                    <p>Unassigned</p>
                }
                else 
                {                
                    @Html.DisplayFor(modelItem => item.DeveloperUser.FullName)
                }
            </td>
            <td>
                <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                @if (User.IsInRole("Admin") ||
                   User.IsInRole("ProjectManager") && await _projectService.IsUserOnProject(userId, item.ProjectId) ||
                   User.IsInRole("Developer") && item.DeveloperUserId == userId ||
                   User.IsInRole("Submitter") && item.OwnerUserId == userId){
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>}
                @if (User.IsInRole("Admin"))
                {
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                }
            </td>
        </tr>
}
    </tbody>
</table>
